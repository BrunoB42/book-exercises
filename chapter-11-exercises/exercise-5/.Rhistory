# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
library("dplyr")
flights
? group_by
flights %>% group_by(month,dep_delay)
group_by(flights,month,dep_delay)
flights %>% group_by(month)
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
dep_delay_by_month <- flights %>% group_by(month) %>% summarize(avg=mean(dep_delay))
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
dep_delay_by_month <- flights %>% group_by(month) %>% summarize(avg=mean(dep_delay,na.rm = TRUE))
# Which month had the greatest average departure delay?
dep_delay_by_month$avg==max(dep_delay_by_month$avg)
# Which month had the greatest average departure delay?
filter(dep_delay_by_month,avg==max(avg))
# Which month had the greatest average departure delay?
dep_delay_by_month %>% filter(avg==max(avg)) %>% select(month)
# Which month had the greatest average departure delay?
max_delay_month <- dep_delay_by_month %>% filter(avg==max(avg)) %>% select(month)
# If your above data frame contains just two columns (e.g., "month", and "delay"
# in that order), you can create a scatterplot by passing that data frame to the
# `plot()` function
plot(select(flights,month,delay))
# If your above data frame contains just two columns (e.g., "month", and "delay"
# in that order), you can create a scatterplot by passing that data frame to the
# `plot()` function
plot(select(flights,month,dep_delay))
# If your above data frame contains just two columns (e.g., "month", and "delay"
# in that order), you can create a scatterplot by passing that data frame to the
# `plot()` function
plot(select(flights,month,dep_delay))
select(flights,month,dep_delay)
# If your above data frame contains just two columns (e.g., "month", and "delay"
# in that order), you can create a scatterplot by passing that data frame to the
# `plot()` function
plot(select(dep_delay_by_month,month,dep_delay))
dep_delay_by_month
# If your above data frame contains just two columns (e.g., "month", and "delay"
# in that order), you can create a scatterplot by passing that data frame to the
# `plot()` function
plot(dep_delay_by_month)
# To which destinations were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation then summarize your data
# You can use the `head()` function to view just the first few rows
flights %>% group_by(dest) %>% summarise(avg=mean(arr_delay))
# To which destinations were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation then summarize your data
# You can use the `head()` function to view just the first few rows
flights %>% group_by(dest) %>% summarise(avg=mean(arr_delay,na.rm=TRUE))
# To which destinations were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation then summarize your data
# You can use the `head()` function to view just the first few rows
arr_delay_by_dest <- flights %>% group_by(dest) %>% summarise(avg=mean(arr_delay,na.rm=TRUE))
worst_delay <- arr_delay_by_dest %>% filter(avg==max(avg)) %>% select(dest)
arr_delay_by_dest %>% filter(avg==max(avg))
head(worst_delay)
view(worst_delay)
View(worst_delay)
arr_delay_by_dest
arr_delay_by_dest %>% filter(avg==max(avg))
avg==max(avg)
? filter
worst_delay <- arr_delay_by_dest %>% filter(avg=max(avg)) %>% select(dest)
worst_delay <- arr_delay_by_dest %>% filter(avg==max(avg,na.rm=TRUE)) %>% select(dest)
airports
# You can look up these airports in the `airports` data frame!
airports %>% filter(faa==worst_delay) %>% select(name)
# You can look up these airports in the `airports` data frame!
airports %>% filter(faa==worst_delay) %>% select(name)
# You can look up these airports in the `airports` data frame!
worst_dest_airport <- airports %>% filter(faa==worst_delay) %>% select(name)
airports %>% filter(faa==worst_delay)
# You can look up these airports in the `airports` data frame!
worst_dest_airport <- airports %>% filter(faa=="CAE") %>% select(name)
# Which city was flown to with the highest average speed?
flights %>% group_by(dest) %>% summarize(avg=mean(distance/air_time,na.rm=TRUE)) %>% filter(avg==max(avg,na.rm=TRUE)) %>% select(dest)
# Which city was flown to with the highest average speed?
highest_spd_dest <- flights %>% group_by(dest) %>% summarize(avg=mean(distance/air_time,na.rm=TRUE)) %>% filter(avg==max(avg,na.rm=TRUE)) %>% select(dest)
# Create a dataframe of the average arrival delays for each _destination_, then
# use `left_join()` to join on the "airports" dataframe, which has the airport
# information
# Which airport had the largest average arrival delay?
avg_dly <- flights %>% group_by(dest) %>% summarise(avg_arr=mean(arr_delay,na.rm=TRUE)) %>% rename(faa=dest)
avg_dly %>% left_join(airports,by="faa")
avg_dly %>% left_join(airports,by="faa") %>% select(faa,avg_arr,name
)
avg_delay_with_name <- avg_dly %>% left_join(airports,by="faa") %>% select(faa,avg_arr,name)
# Which airline had the smallest average arrival delay?
flights %>% group_by(carrier)
# Which airline had the smallest average arrival delay?
flights %>% group_by(carrier) %>% summarize(avg_arr=mean(arr_delay,na.rm=TRUE))
# Which airline had the smallest average arrival delay?
flights %>% group_by(carrier) %>% summarize(avg_arr=mean(arr_delay,na.rm=TRUE)) %>% rename(faa=dest) %>% left_join(airports,by="faa") %>% filter(avg_arr==min(avg_arr) %>% select(name)
# Create a dataframe of the average arrival delay for each _airline_, then use
# `left_join()` to join on the "airlines" dataframe
# Which airline had the smallest average arrival delay?
flights %>% group_by(carrier) %>% summarize(avg_arr=mean(arr_delay,na.rm=TRUE)) %>% rename(faa=dest) %>% left_join(airports,by="faa") %>% filter(avg_arr==min(avg_arr)) %>% select(name)
# Create a dataframe of the average arrival delay for each _airline_, then use
# `left_join()` to join on the "airlines" dataframe
# Which airline had the smallest average arrival delay?
flights %>% group_by(carrier) %>% summarize(avg_arr=mean(arr_delay,na.rm=TRUE)) %>% rename(faa=dest) %>% left_join(airports,by="faa") %>% filter(avg_arr==min(avg_arr)) %>% select(name)
flights %>% group_by(carrier) %>% summarize(avg_arr=mean(arr_delay,na.rm=TRUE))
head(airlines)
# Create a dataframe of the average arrival delay for each _airline_, then use
# `left_join()` to join on the "airlines" dataframe
# Which airline had the smallest average arrival delay?
flights %>% group_by(carrier) %>% summarize(avg_arr=mean(arr_delay,na.rm=TRUE)) %>% left_join(airports,by="carrier") %>% filter(avg_arr==min(avg_arr)) %>% select(name)
flights %>% group_by(carrier) %>% summarize(avg_arr=mean(arr_delay,na.rm=TRUE))
head(airlines)
# Create a dataframe of the average arrival delay for each _airline_, then use
# `left_join()` to join on the "airlines" dataframe
# Which airline had the smallest average arrival delay?
flights %>% group_by(carrier) %>% summarize(avg_arr=mean(arr_delay,na.rm=TRUE)) %>% left_join(airlines,by="carrier") %>% filter(avg_arr==min(avg_arr)) %>% select(name)
# Create a dataframe of the average arrival delay for each _airline_, then use
# `left_join()` to join on the "airlines" dataframe
# Which airline had the smallest average arrival delay?
smallest_arr_delay_airline <- flights %>% group_by(carrier) %>% summarize(avg_arr=mean(arr_delay,na.rm=TRUE)) %>% left_join(airlines,by="carrier") %>% filter(avg_arr==min(avg_arr)) %>% select(name)
install.packages("tidyr")
